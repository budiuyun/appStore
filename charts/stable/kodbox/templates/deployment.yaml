apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kodbox.fullname" . }}
  labels:
    {{- include "kodbox.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kodbox.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kodbox.selectorLabels" . | nindent 8 }}
    spec:
      {{- if and .Values.persistence.enabled .Values.persistence.mounts }}
      initContainers:
        - name: init-volume
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              for path in {{- range $index, $path := .Values.persistence.mounts }} {{ $path }}{{- end }}; do
                if [ ! -d "/data${path}" ] || [ -z "$(ls -A /data${path} 2>/dev/null)" ]; then
                  echo "Initializing data for ${path}"
                  mkdir -p /data${path}
                  if [ -d "${path}" ]; then
                    cp -rp ${path}/* /data${path}/ 2>/dev/null || true
                    cp -rp ${path}/.[^.]* /data${path}/ 2>/dev/null || true
                  fi
                else
                  echo "Directory /data${path} already initialized, skipping"
                fi
              done
          resources:
            limits:
              cpu: "100m"
              memory: "100Mi"
            requests:
              cpu: "50m"
              memory: "64Mi"
          volumeMounts:
            - name: data
              mountPath: /data
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.service.ports }}
          ports:
            {{- range $name, $port := .Values.service.ports }}
            - name: {{ $name }}
              containerPort: {{ $port }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if .Values.env }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $value.name }}
              value: {{ $value.value | quote }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if and .Values.persistence.enabled .Values.persistence.mounts }}
          volumeMounts:
            {{- range $index, $path := .Values.persistence.mounts }}
            - name: data
              mountPath: {{ $path }}
            {{- end }}
          {{- end }}
      {{- if and .Values.persistence.enabled .Values.persistence.mounts }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "kodbox.fullname" . }}
      {{- end }}