apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ubuntu-22-04.fullname" . }}
  labels:
    {{- include "ubuntu-22-04.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ubuntu-22-04.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ubuntu-22-04.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: init-volume
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "200m"
              memory: "256Mi"
          command:
            - /bin/bash
            - -c
            - |
              # 确保持久卷数据完整性
              {{- range $index, $path := .Values.persistence.mounts }}
              # 检查目录是否为空或不存在
              if [ ! -d "/data{{ $path }}" ] || [ -z "$(ls -A /data{{ $path }} 2>/dev/null)" ]; then
                echo "Initializing data for {{ $path }}"
                # 确保目标目录存在
                mkdir -p /data{{ $path }}
                # 使用rsync确保完整复制所有数据，包括权限和特殊文件
                if [ -d "{{ $path }}" ]; then
                  if command -v rsync &> /dev/null; then
                    echo "Using rsync to copy data for {{ $path }}"
                    rsync -avx --exclude='/proc' --exclude='/sys' --exclude='/dev' --exclude='/run' "{{ $path }}/" "/data{{ $path }}/"
                  else
                    echo "Rsync not found, using cp for {{ $path }}"
                    cp -ax {{ $path }}/* /data{{ $path }}/ 2>/dev/null || true
                    cp -ax {{ $path }}/.[^.]* /data{{ $path }}/ 2>/dev/null || true
                  fi
                  # 设置正确的权限
                  chmod -R --reference={{ $path }} /data{{ $path }} 2>/dev/null || true
                fi
              else
                echo "Directory /data{{ $path }} already initialized, skipping"
              fi
              {{- end }}
          {{- if and .Values.persistence.enabled .Values.persistence.mounts }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.service.ports }}
          ports:
            {{- range $name, $port := .Values.service.ports }}
            - name: {{ $name }}
              containerPort: {{ $port }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if .Values.env }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $value.name }}
              value: {{ $value.value | quote }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if and .Values.persistence.enabled .Values.persistence.mounts }}
          volumeMounts:
            {{- range $index, $path := .Values.persistence.mounts }}
            - name: data
              mountPath: {{ $path }}
              subPath: {{ $path | trimPrefix "/" }}
            {{- end }}
          {{- end }}
      {{- if and .Values.persistence.enabled .Values.persistence.mounts }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "ubuntu-22-04.fullname" . }}
      {{- end }}